services:
  gateway:
    build: gateway
    image: shareit-gateway
    container_name: shareit-gateway
    ports:
      - "8080:8080"
    depends_on:
      - server
    environment:
      - SHAREIT_SERVER_URL=http://server:9090

  server:
    build: server
    image: shareit-server
    container_name: shareit-server
    ports:
      - "9090:9090"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shareit
      - SPRING_DATASOURCE_USERNAME=shareit
      - SPRING_DATASOURCE_PASSWORD=shareit

  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "6541:5432"
    environment:
      - POSTGRES_PASSWORD=shareit
      - POSTGRES_USER=shareit
      - POSTGRES_DB=shareit
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10
  db-init:
    image: postgres:16.1
    container_name: db-init
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
        - bash
        - -c
        - |
          set -e
          psql postgresql://shareit:shareit@db:6541/shareit -v ON_ERROR_STOP=1 <<-EOSQL
          
          DROP TABLE IF EXISTS users CASCADE;
          DROP TABLE IF EXISTS items CASCADE;
          DROP TABLE IF EXISTS requests CASCADE;
          DROP TABLE IF EXISTS bookings CASCADE;
          DROP TABLE IF EXISTS comments CASCADE;
    
          CREATE TABLE IF NOT EXISTS users (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
          name VARCHAR(255) NOT NULL,
          email VARCHAR(512) NOT NULL,
          CONSTRAINT pk_user PRIMARY KEY (id),
          CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
          );
    
          CREATE TABLE if NOT EXISTS requests (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
          description VARCHAR NOT NULL,
          requester_id BIGINT NOT NULL,
          CONSTRAINT pk_request PRIMARY KEY  (id),
          CONSTRAINT fk_request_users FOREIGN KEY (requester_id) REFERENCES users ON DELETE CASCADE
          );
    
          CREATE TABLE IF NOT EXISTS items (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
          name VARCHAR(255) NOT NULL,
          description VARCHAR NOT null,
          is_available BOOLEAN not null,
          owner_id BIGINT not null,
          request_id BIGINT,
          CONSTRAINT pk_item PRIMARY KEY  (id),
          CONSTRAINT fk_item_users FOREIGN KEY (owner_id) REFERENCES users ON DELETE CASCADE,
          CONSTRAINT fk_item_requests FOREIGN KEY (request_id) REFERENCES requests ON DELETE CASCADE
          );
    
          CREATE TABLE IF NOT EXISTS bookings (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
          start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
          end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
          item_id BIGINT,
          booker_id BIGINT,
          status VARCHAR,
          CONSTRAINT pk_booking PRIMARY KEY  (id),
          CONSTRAINT fk_booking_users FOREIGN KEY (booker_id) REFERENCES users ON DELETE CASCADE,
          CONSTRAINT fk_booking_items FOREIGN KEY (item_id) REFERENCES items ON DELETE CASCADE
          );
    
          CREATE TABLE IF NOT EXISTS comments (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
          text VARCHAR NOT NULL,
          item_id BIGINT,
          author_id BIGINT,
          created TIMESTAMP WITHOUT TIME ZONE,
          CONSTRAINT pk_comments PRIMARY KEY  (id),
          CONSTRAINT fk_comments_users FOREIGN KEY (author_id) REFERENCES users ON DELETE CASCADE,
          CONSTRAINT fk_comments_items FOREIGN KEY (item_id) REFERENCES items ON DELETE CASCADE
          );
          EOSQL